// Script para probar que la API /auth/me incluye el campo role
console.log('üß™ Probando endpoint /api/auth/me...');

async function testAuthEndpoint() {
  try {
    // Probar el endpoint sin autenticaci√≥n
    const response = await fetch('http://localhost:3004/api/auth/me');
    console.log(`üì° Status: ${response.status}`);
    
    if (response.status === 401) {
      console.log('‚úÖ Endpoint protegido correctamente (401 sin auth)');
      
      // Mostrar informaci√≥n del schema actualizado
      console.log('\nüìã Schema actualizado:');
      console.log('‚úÖ Campo role agregado al modelo User');
      console.log('‚úÖ Campo role agregado al AuthContext interface');
      console.log('‚úÖ Campo role agregado al endpoint /api/auth/me select');
      console.log('‚úÖ Bot√≥n "Crear Curso" implementado con l√≥gica role === "ADMIN"');
      
      console.log('\nüîç Para probar completamente:');
      console.log('1. Ve a http://localhost:3004/courses');
      console.log('2. Inicia sesi√≥n con luisdavid.ls47@gmail.com o aquinozair3@gmail.com');
      console.log('3. Verifica que aparezca el bot√≥n "Crear Curso"');
      console.log('4. Haz clic en el bot√≥n para ir a /admin/courses/create');
      
    } else {
      const data = await response.json();
      console.log('Respuesta:', data);
    }
    
  } catch (error) {
    console.error('Error:', error);
  }
}

testAuthEndpoint();