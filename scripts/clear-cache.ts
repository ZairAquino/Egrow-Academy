#!/usr/bin/env node

import { exec } from 'child_process';
import { promisify } from 'util';
import { rm } from 'fs/promises';
import { existsSync } from 'fs';
import { join } from 'path';

const execAsync = promisify(exec);

async function clearCache() {
  console.log('üßπ Limpiando cach√© de Next.js...\n');

  // Directorios a limpiar
  const dirsToClean = [
    '.next',
    'node_modules/.cache',
  ];

  for (const dir of dirsToClean) {
    const fullPath = join(process.cwd(), dir);
    if (existsSync(fullPath)) {
      console.log(`Eliminando ${dir}...`);
      try {
        await rm(fullPath, { recursive: true, force: true });
        console.log(`‚úÖ ${dir} eliminado`);
      } catch (error) {
        console.error(`‚ùå Error eliminando ${dir}:`, error);
      }
    } else {
      console.log(`‚è≠Ô∏è  ${dir} no existe, saltando...`);
    }
  }

  console.log('\nüì¶ Reinstalando dependencias...');
  try {
    await execAsync('npm install');
    console.log('‚úÖ Dependencias reinstaladas');
  } catch (error) {
    console.error('‚ùå Error reinstalando dependencias:', error);
  }

  console.log('\n‚ú® Cach√© limpiado exitosamente');
  console.log('\nüí° Sugerencias:');
  console.log('1. Reinicia el servidor de desarrollo: npm run dev');
  console.log('2. Limpia el cach√© del navegador o abre en modo inc√≥gnito');
  console.log('3. Si usas Chrome DevTools, deshabilita el cach√© en la pesta√±a Network');
}

clearCache().catch(console.error);