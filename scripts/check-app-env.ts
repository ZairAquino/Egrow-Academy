import * as dotenv from 'dotenv'

// Cargar variables de entorno
dotenv.config()

async function checkAppEnvironment() {
  console.log('üîç [APP] Verificando variables de entorno para la aplicaci√≥n...')
  
  // Verificar variables cr√≠ticas
  const criticalVars = {
    'DATABASE_URL': process.env.DATABASE_URL,
    'RESEND_API_KEY': process.env.RESEND_API_KEY,
    'JWT_SECRET': process.env.JWT_SECRET,
    'NEXTAUTH_SECRET': process.env.NEXTAUTH_SECRET
  }
  
  console.log('\nüìã [APP] Variables de entorno:')
  let allConfigured = true
  
  for (const [key, value] of Object.entries(criticalVars)) {
    if (value) {
      console.log(`   ‚úÖ ${key}: Configurada`)
      if (key.includes('KEY') || key.includes('SECRET')) {
        console.log(`      üîë Valor (primeros 10 chars): ${value.substring(0, 10)}...`)
      } else if (key === 'DATABASE_URL') {
        const isNeon = value.includes('neon.tech')
        console.log(`      üåê Tipo: ${isNeon ? 'Neon (Cloud)' : 'Local'}`)
      }
    } else {
      console.log(`   ‚ùå ${key}: No configurada`)
      allConfigured = false
    }
  }
  
  if (allConfigured) {
    console.log('\n‚úÖ [APP] Todas las variables cr√≠ticas est√°n configuradas')
  } else {
    console.log('\n‚ùå [APP] Faltan variables cr√≠ticas')
  }
  
  // Verificar configuraci√≥n espec√≠fica de la aplicaci√≥n
  console.log('\nüîß [APP] Configuraci√≥n de la aplicaci√≥n:')
  console.log(`   NEXTAUTH_URL: ${process.env.NEXTAUTH_URL || 'No configurado'}`)
  console.log(`   NODE_ENV: ${process.env.NODE_ENV || 'No configurado'}`)
  
  // Verificar si las variables est√°n disponibles en el proceso
  console.log('\nüìä [APP] Verificaci√≥n del proceso:')
  console.log(`   process.env.DATABASE_URL: ${process.env.DATABASE_URL ? '‚úÖ Disponible' : '‚ùå No disponible'}`)
  console.log(`   process.env.RESEND_API_KEY: ${process.env.RESEND_API_KEY ? '‚úÖ Disponible' : '‚ùå No disponible'}`)
}

checkAppEnvironment() 