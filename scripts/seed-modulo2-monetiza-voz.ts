import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function seedModulo2MonetizaVoz() {
  console.log('üéôÔ∏è Iniciando seed del M√ìDULO 2 para Monetiza tu Voz con IA...');

  try {
    // Verificar conexi√≥n a la base de datos
    await prisma.$connect();
    console.log('‚úÖ Conexi√≥n a la base de datos establecida');

    // Buscar el curso
    const course = await prisma.course.findUnique({
      where: { slug: 'monetiza-voz-ia-elevenlabs' }
    });

    if (!course) {
      throw new Error('Curso "monetiza-voz-ia-elevenlabs" no encontrado. Ejecuta primero el seed del curso y M√ìDULO 1.');
    }

    console.log(`üìö Curso encontrado: "${course.title}" (ID: ${course.id})`);

    // Definir las lecciones del M√ìDULO 2
    const module2Lessons = [
      {
        title: '2.1 Introducci√≥n al flujo',
        content: `## Introducci√≥n al flujo de trabajo con ElevenLabs

### Visi√≥n general del proceso
En esta lecci√≥n obtendr√°s una vista panor√°mica de todo el flujo de trabajo que dominar√°s en este m√≥dulo, desde la configuraci√≥n inicial hasta la producci√≥n final.

### Funciones que cubriremos:
1. **Text-to-Speech b√°sico**: Conversi√≥n de texto a voz
2. **Configuraci√≥n de par√°metros**: Ajuste de velocidad, tono y emoci√≥n
3. **Postproducci√≥n**: Efectos y mejoras de calidad
4. **Exportaci√≥n**: Formatos y configuraciones √≥ptimas
5. **Integraci√≥n**: Uso en diferentes plataformas y proyectos

### Metodolog√≠a paso a paso
- **Paso 1**: Preparaci√≥n del texto y selecci√≥n de voz
- **Paso 2**: Configuraci√≥n de par√°metros b√°sicos
- **Paso 3**: Generaci√≥n y revisi√≥n inicial
- **Paso 4**: Ajustes y refinamientos
- **Paso 5**: Postproducci√≥n y exportaci√≥n final

### Casos de uso principales:
- Anuncios publicitarios
- Cursos online y e-learning
- Podcasts y contenido de audio
- Videos promocionales
- Asistentes virtuales

### Entregable
Crear tu propio flujo de 5 pasos personalizado para tu proyecto espec√≠fico usando la plantilla proporcionada.`,
        videoUrl: 'https://www.youtube.com/watch?v=ejemplo-2-1',
        duration: 25,
        order: 4
      },
      {
        title: '2.2 Text-to-Speech (TTS) base',
        content: `## Text-to-Speech: Fundamentos pr√°cticos

### Generaci√≥n de voz desde texto
Aprende a convertir texto en voz natural y profesional, y c√≥mo integrarla efectivamente en videos promocionales.

### Pr√°ctica guiada paso a paso:

#### 1. Preparaci√≥n del gui√≥n
- Redacci√≥n para voz (60-90 segundos)
- Puntuaci√≥n y pausas estrat√©gicas
- Marcas de √©nfasis y emoci√≥n

#### 2. Configuraci√≥n en ElevenLabs
- Selecci√≥n de voz apropiada
- Ajuste de velocidad y tono
- Preview y refinamiento

#### 3. Generaci√≥n y exportaci√≥n
- **Formatos disponibles**: MP3, WAV, FLAC
- **Configuraciones de calidad**: 44.1kHz, 48kHz
- **Optimizaci√≥n por uso**: web, broadcast, m√≥vil

#### 4. Montaje en editor de video
- Sincronizaci√≥n con imagen
- Ajuste de niveles de audio
- Correcci√≥n de timing

### Herramientas recomendadas para montaje:
- **Gratuitas**: DaVinci Resolve, Audacity
- **Profesionales**: Adobe Premiere, Final Cut Pro
- **Online**: Kapwing, InVideo

### Consejos pro:
- Usa formato WAV para m√°xima calidad
- Exporta siempre un backup en MP3
- Ajusta el volumen a -12dB para broadcast

### Entregable
Video promocional corto (60-90s) con voice-over generado por TTS, completamente terminado y listo para publicar.`,
        videoUrl: 'https://www.youtube.com/watch?v=ejemplo-2-2',
        duration: 35,
        order: 5
      },
      {
        title: '2.3 Mejora, cambio y traducci√≥n de voz',
        content: `## Personalizaci√≥n avanzada de la voz

### Cambio de timbre y caracter√≠sticas
Aprende a modificar las caracter√≠sticas de la voz para diferentes contextos y audiencias.

#### Ajustes de timbre:
- **Grave/Agudo**: Para diferentes demograf√≠as
- **Calidez**: M√°s personal vs m√°s corporativo
- **Claridad**: Optimizaci√≥n para diferentes medios

### Ajuste emocional
Control fino de las emociones y estados de √°nimo en la voz:

#### Emociones disponibles:
- **Neutral**: Presentaciones formales
- **Entusiasta**: Marketing y promociones  
- **Calmada**: Meditaci√≥n y relajaci√≥n
- **Urgente**: Llamadas a la acci√≥n
- **Amigable**: Atenci√≥n al cliente

### Traducci√≥n multilenguaje

#### Pr√°ctica guiada: ES ‚Üí EN/PR
Tomaremos el mismo spot creado en la lecci√≥n anterior y lo adaptaremos:

1. **Versi√≥n en ingl√©s**:
   - Traducci√≥n cultural (no literal)
   - Ajuste de timing para diferencias de idioma
   - Selecci√≥n de voz en ingl√©s apropiada

2. **Versi√≥n en portugu√©s**:
   - Adaptaci√≥n para mercado brasile√±o
   - Consideraciones culturales espec√≠ficas
   - Optimizaci√≥n de pronunciaci√≥n

### Proceso de localizaci√≥n:
- **Paso 1**: Traducci√≥n y adaptaci√≥n cultural
- **Paso 2**: Ajuste de duraci√≥n y timing
- **Paso 3**: Selecci√≥n de voz nativa
- **Paso 4**: Generaci√≥n y refinamiento
- **Paso 5**: Sincronizaci√≥n con video original

### Consideraciones t√©cnicas:
- Diferentes idiomas tienen diferentes velocidades naturales
- Ajustar pausas entre frases
- Mantener la energ√≠a del mensaje original

### Entregable
2 variantes del mismo video en diferentes idiomas (ingl√©s y portugu√©s), optimizadas para sus respectivos mercados.`,
        videoUrl: 'https://www.youtube.com/watch?v=ejemplo-2-3',
        duration: 40,
        order: 6
      },
      {
        title: '2.4 Postproducci√≥n (toques pro)',
        content: `## Postproducci√≥n profesional para calidad broadcast

### T√©cnicas de postproducci√≥n avanzada
Transforma tu audio generado por IA en contenido con calidad profesional de emisi√≥n comercial.

### Pipeline de postproducci√≥n:

#### 1. Normalizaci√≥n de audio
- **Niveles √≥ptimos**: -23 LUFS para broadcast, -16 LUFS para streaming
- **Peak limiting**: Evitar distorsi√≥n
- **Consistencia**: Volumen uniforme en todo el proyecto

#### 2. EQ (Ecualizaci√≥n)
- **Frecuencias graves**: Limpieza de rumble (80Hz)
- **Medios**: Claridad vocal (1-3kHz)
- **Agudos**: Presencia y brillo (8-12kHz)

#### 3. Compresi√≥n din√°mica
- **Ratio**: 3:1 a 4:1 para voz
- **Attack/Release**: Naturales pero controlados
- **Makeup gain**: Compensaci√≥n de nivel

#### 4. Efectos broadcast:
- **De-esser**: Control de sibilantes
- **Gate/Expander**: Eliminar ruido de fondo
- **Limiter**: Protecci√≥n contra picos

### Herramientas profesionales:
- **Plugins recomendados**: FabFilter, Waves, iZotope
- **DAW profesionales**: Pro Tools, Logic Pro, Cubase
- **Alternativas gratuitas**: Reaper, Audacity con plugins

### Est√°ndares de calidad:

#### Para diferentes medios:
- **Radio comercial**: -12 LUFS, procesado pesado
- **Podcast**: -16 LUFS, procesado moderado
- **Audiolibros**: -18 LUFS, procesado m√≠nimo
- **Streaming**: -14 LUFS, procesado din√°mico

### Checklist de calidad broadcast:
- ‚úÖ Sin clipping ni distorsi√≥n
- ‚úÖ Niveles consistentes
- ‚úÖ EQ balanceado
- ‚úÖ Compresi√≥n apropiada
- ‚úÖ Sin ruido de fondo
- ‚úÖ Transiciones suaves
- ‚úÖ Formato y sample rate correctos

### Entregable final
Audio postproducido con calidad broadcast professional, listo para usar en cualquier medio comercial.`,
        videoUrl: 'https://www.youtube.com/watch?v=ejemplo-2-4',
        duration: 20,
        order: 7
      }
    ];

    // Crear las lecciones del M√ìDULO 2
    for (const lessonData of module2Lessons) {
      // Verificar si la lecci√≥n ya existe
      const existingLesson = await prisma.lesson.findFirst({
        where: {
          courseId: course.id,
          title: lessonData.title
        }
      });

      if (existingLesson) {
        console.log(`‚è≠Ô∏è Lecci√≥n "${lessonData.title}" ya existe, saltando...`);
        continue;
      }

      // Crear la lecci√≥n
      const lesson = await prisma.lesson.create({
        data: {
          title: lessonData.title,
          content: lessonData.content,
          videoUrl: lessonData.videoUrl,
          duration: lessonData.duration,
          order: lessonData.order,
          courseId: course.id
        }
      });

      console.log(`‚úÖ Lecci√≥n creada: "${lesson.title}" (Order: ${lesson.order})`);
    }

    // Actualizar el contador de lecciones del curso
    const actualLessonsCount = await prisma.lesson.count({
      where: { courseId: course.id }
    });

    await prisma.course.update({
      where: { id: course.id },
      data: { lessonsCount: actualLessonsCount }
    });

    console.log(`üìä Contador de lecciones actualizado: ${actualLessonsCount}`);
    console.log('\nüéâ Seed del M√ìDULO 2 completado exitosamente!');
    
    // Mostrar resumen
    const module1Count = await prisma.lesson.count({
      where: { 
        courseId: course.id,
        title: { startsWith: '1.' }
      }
    });

    const module2Count = await prisma.lesson.count({
      where: { 
        courseId: course.id,
        title: { startsWith: '2.' }
      }
    });
    
    console.log(`\nüìä Resumen para "${course.title}":`);
    console.log(`- Lecciones totales: ${actualLessonsCount}`);
    console.log(`- M√ìDULO 1: ${module1Count}/3 lecciones`);
    console.log(`- M√ìDULO 2: ${module2Count}/4 lecciones ‚ú®`);

  } catch (error) {
    console.error('‚ùå Error durante el seed:', error);
    throw error;
  } finally {
    await prisma.$disconnect();
  }
}

// Ejecutar el seed si se llama directamente
if (require.main === module) {
  seedModulo2MonetizaVoz()
    .then(() => {
      console.log('‚úÖ Script completado');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Error en el script:', error);
      process.exit(1);
    });
}

export { seedModulo2MonetizaVoz };