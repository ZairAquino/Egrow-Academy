async function debugProductionApi() {
  try {
    console.log('üîç DEBUGGEANDO API DE PRODUCCI√ìN...');
    console.log('üìÖ Fecha:', new Date().toISOString());
    
    // Probar el endpoint de producci√≥n
    const productionUrl = 'https://egrowacademy.com/api/courses';
    console.log('üåê URL de producci√≥n:', productionUrl);
    
    const response = await fetch(productionUrl);
    console.log('üì° Status:', response.status);
    console.log('üì° OK:', response.ok);
    
    if (response.ok) {
      const data = await response.json();
      console.log('\n============================================================');
      console.log('üìä RESPUESTA DEL API DE PRODUCCI√ìN:');
      console.log(`üìö Total cursos: ${data.total || 0}`);
      console.log(`üìö Cursos en array: ${data.courses?.length || 0}`);
      
      if (data.courses && data.courses.length > 0) {
        console.log('\nüìñ LISTA DE CURSOS EN PRODUCCI√ìN:');
        data.courses.forEach((course: any, index: number) => {
          console.log(`${index + 1}. ${course.title}`);
          console.log(`   üîó Slug: ${course.slug}`);
          console.log(`   üìä Status: ${course.status}`);
          console.log(`   üÜì Gratis: ${course.isFree}`);
          console.log(`   üîí Requiere Auth: ${course.requiresAuth}`);
          console.log(`   üìÇ Categor√≠a: ${course.category}`);
          console.log(`   üìÖ Creado: ${course.createdAt}`);
          console.log('');
        });
        
        // Buscar espec√≠ficamente el curso de monetiza voz
        const monetizaVozCourse = data.courses.find((course: any) => 
          course.slug === 'monetiza-voz-ia-elevenlabs'
        );
        
        if (monetizaVozCourse) {
          console.log('‚úÖ CURSO MONETIZA VOZ ENCONTRADO EN API DE PRODUCCI√ìN:');
          console.log(`üìö T√≠tulo: ${monetizaVozCourse.title}`);
          console.log(`üîó Slug: ${monetizaVozCourse.slug}`);
          console.log(`üìä Status: ${monetizaVozCourse.status}`);
          console.log(`üí∞ Precio: $${monetizaVozCourse.price}`);
        } else {
          console.log('‚ùå CURSO MONETIZA VOZ NO ENCONTRADO EN API DE PRODUCCI√ìN');
          console.log('üí° Esto confirma que hay un problema con el deploy');
        }
      } else {
        console.log('‚ö†Ô∏è No se encontraron cursos en la respuesta de producci√≥n');
      }
      
      console.log('============================================================\n');
    } else {
      const errorText = await response.text();
      console.log('‚ùå Error en la respuesta de producci√≥n:');
      console.log('Error text:', errorText);
    }
    
    // Comparar con desarrollo
    console.log('üîÑ COMPARANDO CON DESARROLLO...');
    const developmentUrl = 'http://localhost:3000/api/courses';
    console.log('üåê URL de desarrollo:', developmentUrl);
    
    try {
      const devResponse = await fetch(developmentUrl);
      if (devResponse.ok) {
        const devData = await devResponse.json();
        console.log(`üìö Cursos en desarrollo: ${devData.courses?.length || 0}`);
        
        const devMonetizaVoz = devData.courses?.find((course: any) => 
          course.slug === 'monetiza-voz-ia-elevenlabs'
        );
        
        if (devMonetizaVoz) {
          console.log('‚úÖ CURSO ENCONTRADO EN DESARROLLO');
        } else {
          console.log('‚ùå CURSO NO ENCONTRADO EN DESARROLLO');
        }
      }
    } catch (devError) {
      console.log('‚ö†Ô∏è No se pudo conectar a desarrollo (servidor local no activo)');
    }
    
  } catch (error) {
    console.error('‚ùå Error al debuggear API de producci√≥n:', error);
  }
}

debugProductionApi();
