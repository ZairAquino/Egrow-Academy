#!/usr/bin/env tsx

import { execSync } from 'child_process';
import { existsSync, rmSync } from 'fs';
import { join } from 'path';

console.log('üîß Iniciando limpieza y reparaci√≥n del proyecto...');

try {
  // 1. Limpiar cach√© de Next.js
  console.log('üì¶ Limpiando cach√© de Next.js...');
  if (existsSync('.next')) {
    rmSync('.next', { recursive: true, force: true });
    console.log('‚úÖ Cach√© de Next.js eliminada');
  }

  // 2. Limpiar node_modules si hay problemas
  console.log('üóÇÔ∏è Verificando node_modules...');
  if (existsSync('node_modules')) {
    console.log('‚ö†Ô∏è node_modules existe. Si hay problemas, elim√≠nalo manualmente y ejecuta npm install');
  }

  // 3. Limpiar cach√© de npm
  console.log('üßπ Limpiando cach√© de npm...');
  execSync('npm cache clean --force', { stdio: 'inherit' });

  // 4. Regenerar Prisma
  console.log('üîÑ Regenerando cliente Prisma...');
  try {
    execSync('npx prisma generate', { stdio: 'inherit' });
    console.log('‚úÖ Cliente Prisma regenerado');
  } catch (error) {
    console.log('‚ö†Ô∏è Error regenerando Prisma. Intentando limpiar y regenerar...');
    
    // Intentar eliminar solo la carpeta .prisma
    const prismaPath = join('node_modules', '.prisma');
    if (existsSync(prismaPath)) {
      try {
        rmSync(prismaPath, { recursive: true, force: true });
        console.log('‚úÖ Carpeta .prisma eliminada');
      } catch (e) {
        console.log('‚ö†Ô∏è No se pudo eliminar .prisma. Elimina node_modules manualmente.');
      }
    }
  }

  // 5. Verificar TypeScript
  console.log('üîç Verificando configuraci√≥n de TypeScript...');
  try {
    execSync('npx tsc --noEmit --skipLibCheck', { stdio: 'inherit' });
    console.log('‚úÖ TypeScript sin errores');
  } catch (error) {
    console.log('‚ùå Errores de TypeScript encontrados');
  }

  // 6. Verificar ESLint
  console.log('üîç Verificando ESLint...');
  try {
    execSync('npm run lint', { stdio: 'inherit' });
    console.log('‚úÖ ESLint sin errores');
  } catch (error) {
    console.log('‚ö†Ô∏è Advertencias de ESLint encontradas');
  }

  console.log('\nüéâ Limpieza completada!');
  console.log('\nüìã Pr√≥ximos pasos:');
  console.log('1. Si hay problemas con node_modules, elim√≠nalo manualmente');
  console.log('2. Ejecuta: npm install');
  console.log('3. Ejecuta: npm run build');
  console.log('4. Si persisten errores, verifica las variables de entorno');

} catch (error) {
  console.error('‚ùå Error durante la limpieza:', error);
  process.exit(1);
} 