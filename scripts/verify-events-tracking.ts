#!/usr/bin/env tsx

/**
 * Script para verificar que los eventos se est√©n registrando correctamente
 * 
 * Este script verifica que los eventos del webinar se est√©n enviando
 * correctamente a Meta Business y aparezcan en el dashboard.
 * 
 * Uso: npx tsx scripts/verify-events-tracking.ts
 */

interface EventVerification {
  eventType: string;
  expectedData: any;
  status: 'sent' | 'pending' | 'error';
  timestamp?: string;
}

class EventsTrackingVerifier {
  private pixelId = '1247652460159167';
  private webinarId = 'videos-profesionales-ia';

  async runVerification() {
    console.log('üîç Verificando eventos de tracking del webinar...\n');

    console.log('üìä Eventos que deber√≠an aparecer en Meta Business:');
    
    const expectedEvents = [
      {
        name: 'PageView',
        description: 'Visualizaci√≥n de la p√°gina del webinar',
        trigger: 'Carga de p√°gina',
        data: {
          content_name: 'Crea Videos Profesionales con IA',
          content_category: 'Webinar',
          content_type: 'webinar_page'
        }
      },
      {
        name: 'ViewContent',
        description: 'Visualizaci√≥n del contenido del webinar',
        trigger: '1 segundo despu√©s de cargar',
        data: {
          content_name: 'Crea Videos Profesionales con IA',
          content_category: 'Webinar',
          content_type: 'webinar_view',
          content_ids: ['videos-profesionales-ia']
        }
      },
      {
        name: 'Lead',
        description: 'Intento de registro al webinar',
        trigger: 'Click en "Iniciar Sesi√≥n para Comenzar"',
        data: {
          content_name: 'Webinar Registration Attempt',
          content_category: 'Webinar',
          content_type: 'webinar_registration_attempt',
          custom_parameters: {
            webinar_id: 'videos-profesionales-ia',
            action: 'redirect_to_login',
            user_status: 'anonymous'
          }
        }
      },
      {
        name: 'CustomEvent',
        description: 'Eventos espec√≠ficos del funnel',
        trigger: 'Diferentes pasos del funnel',
        data: {
          content_name: 'Webinar Landing Page View',
          content_category: 'Webinar',
          content_type: 'webinar_landing_view',
          custom_parameters: {
            webinar_id: 'videos-profesionales-ia',
            funnel_step: 'landing_page_view'
          }
        }
      },
      {
        name: 'Webinar Registration',
        description: 'Registro exitoso al webinar',
        trigger: 'Click en "Comenzar Curso Premium"',
        data: {
          content_name: 'Crea Videos Profesionales con IA',
          content_category: 'Webinar',
          content_type: 'webinar_registration',
          content_ids: ['videos-profesionales-ia']
        }
      }
    ];

    expectedEvents.forEach((event, index) => {
      console.log(`\n${index + 1}. ${event.name}`);
      console.log(`   üìù Descripci√≥n: ${event.description}`);
      console.log(`   üéØ Trigger: ${event.trigger}`);
      console.log(`   üìä Datos: ${JSON.stringify(event.data, null, 2)}`);
    });

    console.log('\nüîç C√≥mo verificar en Meta Business:');
    console.log('\n1. Ir a Meta Business Manager:');
    console.log('   https://business.facebook.com/');

    console.log('\n2. Navegar a:');
    console.log('   ‚Ä¢ Data Sources');
    console.log('   ‚Ä¢ Pixels');
    console.log('   ‚Ä¢ Buscar Pixel ID: 1247652460159167');

    console.log('\n3. En la pesta√±a "Test events":');
    console.log('   ‚Ä¢ Deber√≠as ver eventos en tiempo real');
    console.log('   ‚Ä¢ Los eventos deber√≠an mostrar tu dominio real');
    console.log('   ‚Ä¢ No deber√≠an aparecer eventos de localhost');

    console.log('\n4. En la pesta√±a "All Activity":');
    console.log('   ‚Ä¢ Deber√≠as ver eventos hist√≥ricos');
    console.log('   ‚Ä¢ Los eventos deber√≠an tener el dominio correcto');
    console.log('   ‚Ä¢ Deber√≠as ver diferentes tipos de eventos');

    console.log('\n5. Verificar eventos espec√≠ficos:');
    console.log('   ‚Ä¢ PageView: Deber√≠a aparecer al cargar la p√°gina');
    console.log('   ‚Ä¢ ViewContent: Deber√≠a aparecer despu√©s de 1 segundo');
    console.log('   ‚Ä¢ Lead: Deber√≠a aparecer al intentar registrarse');
    console.log('   ‚Ä¢ CustomEvent: Deber√≠a aparecer en diferentes pasos');

    console.log('\n‚ö†Ô∏è  Si no aparecen eventos:');
    console.log('   1. Verificar que el sitio est√© en producci√≥n');
    console.log('   2. Verificar que no haya bloqueadores de anuncios');
    console.log('   3. Verificar que el dominio est√© configurado en Meta');
    console.log('   4. Esperar 24-48 horas para que Meta actualice');

    console.log('\nüîß Para probar eventos manualmente:');
    console.log('   1. Visitar: https://egrow-academy.com/curso/videos-profesionales-ia');
    console.log('   2. Abrir DevTools (F12)');
    console.log('   3. Ir a la pesta√±a Network');
    console.log('   4. Filtrar por "facebook"');
    console.log('   5. Navegar por la p√°gina');
    console.log('   6. Verificar que se env√≠en eventos a Facebook');

    console.log('\nüìä M√©tricas que deber√≠as ver:');
    console.log('   ‚Ä¢ Impresiones de la p√°gina del webinar');
    console.log('   ‚Ä¢ Clicks en botones de registro');
    console.log('   ‚Ä¢ Conversiones de registro al webinar');
    console.log('   ‚Ä¢ Costo por registro al webinar');
    console.log('   ‚Ä¢ ROI de campa√±as del webinar');
  }

  async checkProductionStatus() {
    console.log('\nüîç Verificando estado de producci√≥n...');
    
    const isProduction = process.env.NODE_ENV === 'production';
    const isDevelopment = process.env.NODE_ENV === 'development';
    
    console.log(`   ‚Ä¢ Entorno actual: ${process.env.NODE_ENV || 'undefined'}`);
    console.log(`   ‚Ä¢ Es producci√≥n: ${isProduction}`);
    console.log(`   ‚Ä¢ Es desarrollo: ${isDevelopment}`);
    
    if (isProduction) {
      console.log('   ‚úÖ En producci√≥n: Los eventos se enviar√°n a Meta Business');
    } else if (isDevelopment) {
      console.log('   ‚ö†Ô∏è  En desarrollo: Los eventos NO se enviar√°n a Meta Business');
      console.log('   üí° Para probar eventos, visita el sitio en producci√≥n');
    } else {
      console.log('   ‚ùì Entorno no definido: Verificar configuraci√≥n');
    }
  }

  async provideTestingInstructions() {
    console.log('\nüß™ Instrucciones para testing:');
    console.log('\n1. Testing en Producci√≥n:');
    console.log('   ‚Ä¢ Visitar: https://egrow-academy.com/curso/videos-profesionales-ia');
    console.log('   ‚Ä¢ Abrir DevTools (F12)');
    console.log('   ‚Ä¢ Ir a pesta√±a Network');
    console.log('   ‚Ä¢ Filtrar por "facebook"');
    console.log('   ‚Ä¢ Navegar por la p√°gina');
    console.log('   ‚Ä¢ Verificar eventos enviados');

    console.log('\n2. Testing con Facebook Pixel Helper:');
    console.log('   ‚Ä¢ Instalar extensi√≥n "Facebook Pixel Helper"');
    console.log('   ‚Ä¢ Visitar la p√°gina del webinar');
    console.log('   ‚Ä¢ Verificar que aparezcan eventos en la extensi√≥n');

    console.log('\n3. Testing en Meta Business:');
    console.log('   ‚Ä¢ Ir a Events Manager');
    console.log('   ‚Ä¢ Buscar Pixel ID: 1247652460159167');
    console.log('   ‚Ä¢ Verificar eventos en tiempo real');
    console.log('   ‚Ä¢ Verificar que el dominio sea correcto');
  }
}

async function main() {
  const verifier = new EventsTrackingVerifier();
  
  await verifier.runVerification();
  await verifier.checkProductionStatus();
  await verifier.provideTestingInstructions();
  
  console.log('\nüéâ Verificaci√≥n completada!');
  console.log('\nüìã Pr√≥ximos pasos:');
  console.log('   1. Visitar el sitio en producci√≥n');
  console.log('   2. Verificar eventos en Meta Business');
  console.log('   3. Crear audiencias basadas en eventos');
  console.log('   4. Configurar campa√±as de retargeting');
}

if (require.main === module) {
  main().catch(console.error);
}

export default EventsTrackingVerifier; 