{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(mv:*)",
      "WebFetch(domain:www.deeplearning.ai)",
      "Bash(npm run build:*)",
      "Bash(git commit:*)",
      "Bash(npm run dev:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(mkdir:*)",
      "Bash(npx ts-node:*)",
      "Bash(copy:*)",
      "Bash(cp:*)",
      "Bash(npm install:*)",
      "Bash(npx prisma generate:*)",
      "Bash(taskkill:*)",
      "Bash(rm:*)",
      "Bash(next build)",
      "Bash(npx next:*)",
      "Bash(echo $NODE_ENV)",
      "Bash(npm run tsx:*)",
      "Bash(npx tsx:*)",
      "Bash(git reset:*)",
      "Bash(curl:*)",
      "Bash(powershell:*)",
      "Bash(cmd /c:*)",
      "Bash(npx prisma:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(__NEW_LINE__ - Arreglar llave de cierre duplicada en l√≠nea 1509 de globals.css)",
      "Bash(- Reorg)",
      "Bash(npx kill-port:*)",
      "Bash(git filter-branch:*)",
      "Bash(git stash:*)",
      "Bash(npm run check:env:*)",
      "Bash(pkill:*)",
      "Bash(vercel:*)",
      "Bash(git branch:*)",
      "Bash(npx tsc:*)",
      "Bash(node:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm ls:*)",
      "Bash(npm cache clean:*)",
      "mcp__ide__getDiagnostics",
      "Bash(npm run lint)",
      "Bash(timeout 15 npm run dev)",
      "Bash(timeout 8 npm run dev)",
      "Bash(del nul)",
      "Bash(npx @modelcontextprotocol/cli install:*)",
      "Bash(npm run typecheck:*)",
      "Bash(tsx scripts/fix-typescript-errors.ts:*)",
      "Bash(npm run:*)",
      "Bash(timeout 5 npm run dev)",
      "Bash(psql:*)",
      "Bash(del test-db-connection.js create-test-user.js)",
      "Bash(dir \"C:\\Users\\think\\Egrow-Academy\\src\\components\\auth\")",
      "Bash(git checkout:*)",
      "Bash(dir:*)",
      "Bash(pg_ctl:*)",
      "Bash(scripts/fix-prisma-client:*)",
      "Bash(.scriptsfix-prisma-client.bat)",
      "Bash(timeout 10 npm run dev)",
      "Bash(xcopy:*)",
      "Bash(robocopy:*)",
      "Bash(del scriptsupdate-course-lesson-count.ts)",
      "Bash(rg:*)",
      "Bash(del \"C:\\Users\\think\\Egrow-Academy\\temp-lessons.txt\")",
      "Bash(del temp-check.ts)",
      "Bash(del check-resource-categories.js check-raw-categories.js)",
      "Bash(del test-db-connection.js)",
      "Bash(del test-streaks-production.js)",
      "Bash(del \"C:\\Users\\think\\Egrow-Academy\\scripts\\test-mockup-course.ts\")",
      "Bash(del check-courses.js delete-duplicate-course.js update-mockup-course.js)",
      "WebFetch(domain:egrowacademy.com)",
      "Bash(del scriptstest-badge-customization.ts)",
      "Bash(del:*)",
      "Bash(timeout 3 npm run dev)",
      "Bash(if [ -f \"C:/Users/think/Downloads/Rick.png\" ])",
      "Bash(then echo \"Rick.png exists\")",
      "Bash(else echo \"Rick.png not found\")",
      "Bash(fi)",
      "Bash(sed:*)",
      "Bash(true)",
      "Bash(move:*)",
      "Bash(cleanup-scripts.bat)",
      "Bash(tsx scripts/send-reminders-direct.ts:*)",
      "Bash(tsx scripts/send-urgent-reminders-NOW.ts:*)",
      "Bash(tsx scripts/send-live-now-reminders.ts:*)",
      "Bash(tsx scripts/test-streaks-debug.ts:*)",
      "Bash(tsx scripts/check-neon-branch-data.ts:*)",
      "Bash(tsx scripts/send-live-webinar-NOW.ts:*)",
      "Bash(tsx scripts/debug-webinar-users.ts:*)",
      "Bash(tsx scripts/send-live-webinar-CORRECTED.ts:*)",
      "WebFetch(domain:localhost)",
      "Bash(cat:*)",
      "Bash(git fetch:*)",
      "Bash(git pull:*)",
      "Bash(timeout 30 npm run dev)"
    ],
    "deny": []
  }
}